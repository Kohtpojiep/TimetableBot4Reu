package view.discord.—Åommands;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.Permission;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.Role;
import net.dv8tion.jda.api.entities.TextChannel;
import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
import net.dv8tion.jda.api.events.message.react.MessageReactionAddEvent;
import net.dv8tion.jda.api.events.message.react.MessageReactionRemoveEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import view.discord.bot.DiscordBotView;
import view.discord.refac.RefacDiscord;


public class Subscribe extends ListenerAdapter {
    private DiscordBotView bot;
    public Subscribe(DiscordBotView bot) { this.bot = bot; }

    final String EMOJI_CRINGE = "<:wideCringe1:623115706627522562><:wideCringe2:623115648637337600>";
    final String EMOJI_TRIDANCE = "<a:TriDance:713920347665334353>";

    @Override
    public void onMessageReceived(MessageReceivedEvent e) {
        String[] args = e.getMessage().getContentRaw().split("\\s+");
        TextChannel channel = e.getTextChannel();

        boolean isAdminAndNotBot = e.getMember().hasPermission(Permission.ADMINISTRATOR) && !e.getMember().getUser().isBot();

        if (args[0].equalsIgnoreCase(RefacDiscord.prefix + "submsg") && isAdminAndNotBot) {
            EmbedBuilder eb = new EmbedBuilder();
            eb.setColor(0xFFFEEC);
            eb.setTitle("__–û–§–û–†–ú–õ–Ø–ï–ú –ü–û–î–ü–ò–°–û–ß–ö–£__");
            eb.addField("", "**\uD83D\uDDFF –ó–î–ï–°–¨ –û–¢–ü–†–ê–í–õ–Ø–ï–¢–°–Ø –†–ê–°–ü–ò–°–ê–ù–ò–ï**", false); // üóø
            eb.addField("**–í—Å–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∏ –Ω–µ–Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å**",
                    "**‚Ä¢** –†–æ–ª—å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏: " + SetSubRole.subrole +
                    "\n**‚Ä¢** –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–æ–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ ‚òë" +
                    "\n**‚Ä¢** –°–ª–µ–∂—É –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è" +
                    "\n**‚Ä¢** –û–±–∏—Ç–∞—é —Ç–∞–∫–∂–µ –≤ ***—Ç–µ–ª–µ–≥—Ä–∞–º–µ –∏ –í–ö***" +
                    "\n**‚Ä¢** –ï–±–∞—à—É –º–µ—Ñ–µ–¥—Ä–æ–Ω 24/7" +
                    "\n**‚Ä¢** –°–∞–π—Ç **–†–≠–£** –¥–µ–ª–∞–ª–∏ **–≥–æ–º–∏–∫–∏**" +
                    "\n**‚Ä¢** –õ—é–±–∏—Ç–µ–ª—å –≤–æ—Ä–¥–∞ –∏ —ç–∫—Å–µ–ª—è " + EMOJI_CRINGE +
                    "\n**‚Ä¢** –ù–∞–ø–∏—à–∏ __" + RefacDiscord.prefix + "alhamdulillah__" +
                    "\n**‚Ä¢** –ê–≤—Ç–æ—Ä ‚Äî —Å—É–∫–∞" + EMOJI_TRIDANCE,
                    false);
            eb.setImage(RefacDiscord.LINK_KAMPUTER_GIF);

            channel.sendMessage(eb.build()).complete().addReaction("‚òë").queue();
        }
    }

    final String MESSAGE_ID = "725750117189025804";
    private String userMessage;
    private String subroleName;
    private Member member;
    private boolean isNotBot;
    private Role role;

    @Override
    public void onMessageReactionAdd(MessageReactionAddEvent e) {
        userMessage = e.getMessageId();
        isNotBot = !e.getMember().getUser().isBot();
        member = e.getMember();
        subroleName = e.getGuild().getRoleById(SetSubRole.subroleID).getName();
        role = e.getGuild().getRolesByName(subroleName, false).get(0);

        if (userMessage.equals(MESSAGE_ID) && e.getReactionEmote().getName().equals("‚òë") && isNotBot)
            e.getGuild().addRoleToMember(member, role).queue();
    }

    @Override
    public void onMessageReactionRemove(MessageReactionRemoveEvent e) {
        userMessage = e.getMessageId();
        isNotBot = !e.getMember().getUser().isBot();
        member = e.getMember();
        subroleName = e.getGuild().getRoleById(SetSubRole.subroleID).getName();
        role = e.getGuild().getRolesByName(subroleName, false).get(0);

        if (userMessage.equals(MESSAGE_ID) && e.getReactionEmote().getName().equals("‚òë") && isNotBot)
            e.getGuild().removeRoleFromMember(member, role).queue();
    }

    // –≤—Å–µ —Ç–æ —á—Ç–æ –Ω–∏–∂–µ –Ω–µ–¥–æ–¥–µ–ª–∞–Ω–æ –¥–∞ –∏ –≤ —Ö–æ–¥–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤ –æ–∫–∞–∑–∞–ª–æ—Å—å –∏ –≤–æ–≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–º, –∞ —É–¥–∞–ª—è—Ç—å —Ç–æ –∂–∞–ª–∫–æ =(

    /*
     * String[] info
     * info[0]: –Ω–∞–ª–∏—á–∏–µ/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
     * info[1]: –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è/–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è
     * info[2]: —Ä–µ–∞–∫—Ü–∏—è
     *
     * –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∫–ª—é—á–µ–Ω–Ω–æ–π/–≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
     * –º–∞—Å—Å–∏–≤ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
     */

//    public void onMessageReceived2(MessageReceivedEvent e) {
//        String[] args = e.getMessage().getContentRaw().split("\\s+");
//        String[] info = new String[3];
//        int color;
//        TextChannel channel;
//        Member member;
//
//        if (args[0].equalsIgnoreCase(RefacDiscord.prefix + "sub")) {
//            channel = e.getTextChannel();
//            member = e.getMember();
//            Role role = e.getGuild().getRoleById(SetSubRole.subroleID);
//
//            if (!member.getRoles().contains(role)) {
//                color = 0xff3300;
//                info[0] = "–û—Ç–∫–ª—é—á–µ–Ω–∞";
//                info[1] = "–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è";
//                info[2] = "‚òë";
//            } else {
//                color = 0x8ce482;
//                info[0] = "–í–∫–ª—é—á–µ–Ω–∞";
//                info[1] = "–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è";
//                info[2] = "‚ùå";
//            }
//            embedMessage2(info, color, channel, member);
//        }
//    }
//
//    private void embedMessage2(String[] info, int color, TextChannel channel, Member member) {
//        EmbedBuilder eb = new EmbedBuilder();
//
//        eb.setColor(color);
//        eb.setDescription("–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: **" + info[0] + "**");
//        eb.addField("‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî",
//                "–ß—Ç–æ–±—ã " + info[1] + ", –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é —Å–Ω–∏–∑—É " + info[2],
//                false);
//        eb.setFooter("Requested by " + member.getUser().getAsTag(), member.getUser().getAvatarUrl());
//
//        channel.sendMessage(eb.build()).complete().addReaction(info[2]).queue();
//    }
}
