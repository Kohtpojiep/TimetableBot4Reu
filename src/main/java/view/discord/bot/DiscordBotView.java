package view.discord.bot;

import net.dv8tion.jda.api.*;
import net.dv8tion.jda.api.entities.Activity;
import net.dv8tion.jda.api.entities.TextChannel;
import view.BotView;
import view.discord.refac.RefacDiscord;
import view.discord.—Åommands.GetTT;
import view.discord.—Åommands.SetSubRole;
import view.discord.—Åommands.Subscribe;

public class DiscordBotView implements BotView {
    public static JDA jda;

    private static DiscordBotView view;

    public static DiscordBotView getInstance() {
        if (view == null) view = new DiscordBotView();
        return view;
    }
    private DiscordBotView() {
        try {
            jda = new JDABuilder(AccountType.BOT)
                    .setToken(RefacDiscord.TOKEN)
                    .build()
                    .awaitReady();
            jda.getPresence().setStatus(OnlineStatus.ONLINE);
            jda.getPresence().setActivity(Activity.watching("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç"));

            jda.addEventListener(new GetTT(this)); // –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ
            jda.addEventListener(new Subscribe(this)); // –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è/–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è
            jda.addEventListener(new SetSubRole(this)); // –ø–æ–º–µ–Ω—è—Ç—å —Ä–æ–ª—å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    //public static void main(String[] args) { BotView bot = new DiscordBotView(); }
    // –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–∞–±–∞–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    final String CHANNEL_ID = "725745635650699417";
    public void sendTimetableForSubs(String[][] timetable) {
        TextChannel channel = jda.getTextChannelById(CHANNEL_ID);
        channel.sendMessage("**–∫—É—à–∞–µ–º —Å–ª–∞–¥–µ–Ω—å–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ** \uD83D\uDC26 \n||–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..||"); //üê¶
        embedTimetable(timetable, channel);
    }
    // —ç–º–±–µ–¥ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    public void embedTimetable(String[][] timetable, TextChannel channel) {
        EmbedBuilder eb = new EmbedBuilder();
        String date = timetable[0][1];
        String reaIcon = RefacDiscord.LINK_REA_ICON;
        String gorin = RefacDiscord.LINK_GORIN;

        eb.setAuthor("\uD83D\uDCDA –†–ê–°–ü–ò–°–ê–ù–ò–ï"); // üìö
        eb.setThumbnail(reaIcon);
        eb.setTitle(date, RefacDiscord.LINK_REA_PK_21);
        for (int i = 1; i < timetable.length; i++)
            setLesson(eb, timetable[i][0], timetable[i][1]);
        eb.setFooter("–∫–∞–∫ –≤—Å–µ–≥–¥–∞ –≥–æ–≤–Ω–æ", gorin);

        channel.sendMessage(eb.build()).queue();
    }
    // —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–µ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã
    private void setLesson(EmbedBuilder eb, String time, String lesson) {
        eb.addField("`" + time + "`", lesson, false);
    }
}
